"""
Conex√£o simples e segura com MySQL.
"""

import os
from dotenv import load_dotenv
import mysql.connector
from mysql.connector import Error

# Carrega vari√°veis de ambiente
load_dotenv()

def main():
    try:
        # Verifica se todas as vari√°veis de ambiente necess√°rias est√£o presentes
        required_vars = ['DB_HOST', 'DB_PORT', 'DB_USER', 'DB_PASSWORD', 'DB_DATABASE']
        for var in required_vars:
            if not os.getenv(var):
                raise ValueError(f"‚ùå Vari√°vel de ambiente {var} n√£o encontrada no arquivo .env")
        
        # Cria a conex√£o usando apenas vari√°veis do .env
        connection = mysql.connector.connect(
            host=os.getenv('DB_HOST'),
            port=int(os.getenv('DB_PORT')),
            user=os.getenv('DB_USER'),
            password=os.getenv('DB_PASSWORD'),
            database=os.getenv('DB_DATABASE')
        )

        if connection.is_connected():
            print("‚úÖ Conex√£o estabelecida com sucesso!")
            
            # Exemplo: executar uma consulta simples para testar
            cursor = connection.cursor()
            cursor.execute("SELECT VERSION()")
            version = cursor.fetchone()
            print(f"üìã Vers√£o do MySQL: {version[0]}")
            
            # Mostra informa√ß√µes da conex√£o
            print(f"üìç Host: {os.getenv('DB_HOST')}")
            print(f"üö™ Porta: {os.getenv('DB_PORT')}")
            print(f"üë§ Usu√°rio: {os.getenv('DB_USER')}")
            print(f"üóÉÔ∏è Banco de dados: {os.getenv('DB_DATABASE')}")
            
            cursor.close()

    except ValueError as e:
        print(e)
    except Error as e:
        print(f"‚ùå Erro ao conectar: {e}")
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")

    finally:
        if 'connection' in locals() and connection.is_connected():
            connection.close()
            print("üîí Conex√£o encerrada com seguran√ßa.")

if __name__ == "__main__":
    main()